<?php

/*
 * funció html_generateSelect: a partir d'un array associatiu, genera codi
 * html per la visualització d'un control SELECT-OPTION generand un menú
 * desplegable.
 *
 * paràmetres:
 * * opcions: array associatiu, en el que la clau representa el valor a definir i
 *      el valor serà el text a mostrar.
 * * atributs: (Opcional) Array associatiu amb parelles atribut-valor segons la
 *       definició html.
 *       https://www.w3schools.com/tags/tag_select.asp apartat Attributes
 *       autofocus: boolean
 *       disabled: boolean
 *       form: string
 *       multible: boolean
 *       name: string
 *       required: boolean
 *       size: integer
 *       class: string
 *       id: string
 *       label: string
 *
 * return: El resultat és un string amb el codi html del contol select-option
 */

function html_generateSelect($opcions, $seleccionat, $atributs) {
    if (isset($atributs)) {
        //atribut autofocus: boolean
        if ($atributs['autofocus']===true) {
            $attAutofocus = "autofocus ";
        }
        
        //atribut disabled: boolean
        if ($atributs['disabled']===true) {
            $attDisabled = "disabled ";
        }
        
        //atribut form: string
        if (isset($atributs['form'])) {
            $attForm = "form=\"{$atributs['form']}\"";
        }
        
        //atribut multible: boolean
        if (isset($atributs['multiple'])) {
            $attMultiple = "multiple";
        }
        
        //atribut name: string
        if (isset($atributs['name'])) {
            $attName = "name=\"{$atributs['name']}\"";
        }
        
        //atribut required: boolean
        if (isset($atributs['required'])) {
            $attRequred = "required";
        }
        
        //atribut size: integer
        if (isset($atributs['size'])) {
            $attSize = "size=\"{$atributs['size']}\"";
        }
        
        //atribut class: string
        if (isset($atributs['class'])) {
            $attClass = "class=\"{$atributs['class']}\"";
        }
        
        //atribut id: string
        if (isset($atributs['id'])) {
            $attId = "id=\"{$atributs['id']}\"";
        }
        
        //label no és un atribut, però ho tractarem com si ho fos.
        if (isset($atributs['label'])) {
            $attLabel = "<label for='".$atributs['id']."'>".$atributs['label']."</label><br/>\n";
        }
    }
    
    $resultat = $attLabel;
    $resultat .= "<select $attId $attClass $attName $attSize $attForm $attRequred $attMultiple $attDisabled $attAutofocus>\n";
    foreach ($opcions as $key => $value) {
        $resultat .= "<option value=\"$key\"";
        if (isset($seleccionat) && $seleccionat===$key ) {
            $resultat .= " selected";
        }
        $resultat .=">".ucwords($value)."</option>\n";
    }
    $resultat .="</select>\n";
    if (isset($atributs['span'])) {
        $resultat .= "<span class=\"error\" > {$atributs['span']} </span>\n";
    }
    
    return $resultat;
}

/*
 * funció html_generateChekBox: a partir d'un array associatiu, genera codi
 * html per la visualització dels controls CHECK-BOX.
 *
 * paràmetres:
 * * opcions: array associatiu, amb la clau que representa l'identificador html
 *       únic (l'id) i el valor serà un array amb les següents claus:
 *       "name" que representa el valor a definir,
 *       "label" que emmagatzemarà el text a mostrar,
 *       "value" el valor a assignar,
 *       "checked" que emmagatzemarà un valor booleà.
 * * abans: (Per defecte true) Defineix el label abans/dreprés del checkbox
 *
 * return: El resultat és un string amb el codi html del contol select-option
 */

function html_generateCheckBox($opcions, $abans="true") {
    foreach ($opcions as $key => $value) {
        $bChecked = ($value['checked']) ? true : false;
        unset($value['checked']);
        $label = "<label for=\"{$key}\">{$value['label']}</label><br>\n";
        unset($value['label']);
        
        $value["type"] = "checkbox";
        $value["id"] = $key;
        $input = html_generaInput($value);   
        $input = ($bChecked) ? str_replace(">","checked >",$input) : $input;
        
        if ($abans) {
            $resultat .= "$input\n$label";
        } else {
            $resultat .= "$label\n$input";
        }
    }
    
    return $resultat;
}

/*
 * funció html_generateChekBox: a partir d'un array associatiu, genera codi
 * html per la visualització dels controls CHECK-BOX.
 *
 * paràmetres:
 * * opcions: array associatiu, amb la clau que representa l'identificador html
 *       únic (l'id) i el valor serà un array amb les següents claus:
 *       "name" que representa el valor a definir,
 *       "label" que emmagatzemarà el text a mostrar,
 *       "value" el valor a assignar,
 *       "checked" que emmagatzemarà un valor booleà.
 * * abans: (Per defecte true) Defineix el label abans/dreprés del checkbox
 *
 * return: El resultat és un string amb el codi html del contol select-option
 */

function html_generateRadioButon($opcions, $abans="true") {
    foreach ($opcions as $key => $value) {
        $bChecked = ($value['checked']) ? true : false;
        unset($value['checked']);
        $label = "<label for=\"{$key}\" class=\"fs-form\">{$value['label']}</label>";
        unset($value['label']);
        
        $value["type"] = "radio";
        $value["id"] = $key;
        $input = html_generaInput($value);
        $input = ($bChecked) ? str_replace(">","checked >",$input) : $input;
        
        if ($abans) {
            $resultat .= "$input\n$label";
        } else {
            $resultat .= "$label\n$input";
        }
    }
    
    return $resultat;
}

/*
 * funció html_generateInput: a partir d'un array associatiu, genera codi
 * html per la visualització dels controls INPUT.
 *
 * paràmetres:
 * * opcions: array associatiu, amb la clau que representa l'identificador html
 *       únic (l'id) i el valor serà un array amb les següents claus:
 *       "type" 
 *       "name" ,
 *       "placeholder" 
 *       "class"
 *       "value"
 *       o qualsevol altre atribut de INPUT 
 *
 * return: El resultat és un string amb el codi html del contol select-option
 */
function html_generaInput($options) {
    $resultat = "<input ";    

    foreach ($options as $key => $value) {
        $resultat .= ($key!="span") ? "$key =\"$value\" " : "";
    }
    $resultat .= ">\n";
    if (isset($options['span'])) {
        $resultat .= "<span class=\"error\" > {$options['span']} </span>\n";
    }
    return $resultat;
}

function isElementSimple($element) {
    $numeroDAparicions = substr_count($element, "<");
    return ($numeroDAparicions <= 2);
}

function extreuContingut($element, $etiqueta) {
    do {
        if (isElementSimple($element)) {
            $finalEtiquetaApertura = strpos($element, ">", 0);
            $iniciEtiquetaTancament = strpos($element, "<", $finalEtiquetaApertura);
            $longitud = $iniciEtiquetaTancament - $finalEtiquetaApertura - 1;
            return ($longitud < 0) ? "" : trim(substr($element, $finalEtiquetaApertura + 1, $longitud));
        } else {

            // Busquem l'etiqueta interna. El sub-element
            $iniciSubElement = strpos($element, "<", 1) + 1;
            $blancFiSubElement = strpos($element, " ", $iniciSubElement);
            $majorFiSubElement = strpos($element, ">", $iniciSubElement);
            $fiSubElement = ($blancFiSubElement != FALSE && $blancFiSubElement < $majorFiSubElement) ? $blancFiSubElement : $majorFiSubElement;

            $longitudEtiqueta = $fiSubElement - $iniciSubElement;
            $etiqueta = substr($element, $iniciSubElement, $longitudEtiqueta);

            $iniciElementIntern = strpos($element, "<$etiqueta", 0);
            $fiElementIntern = strpos($element, "</$etiqueta>", $iniciElementIntern);
            if ($fiElementIntern == FALSE) {
                $fiElementIntern = strpos($element, ">", $iniciElementIntern) + 1;
            }
            $elementIntern = substr($element, $iniciElementIntern, $fiElementIntern - $iniciElementIntern + strlen($etiqueta));
            $resultat = extreuContingut($elementIntern, $etiqueta);

            if (empty($resultat)) {
                // elimino el subelement
                $element = str_replace($elementIntern, "", $element);
            }
        }
    } while (empty($resultat));
    return $resultat;
}

function extreureFila($element) {
    // Camp nom
    $inici = strpos($element, '<td ', 0);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["nom"] = $text;

    // ticker
    $inici = strpos($element, '<td', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["ticker"] = $text;

    // mercat
    $inici = strpos($element, '<td', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["mercat"] = $text;

    // no tracto
    $inici = strpos($element, '<td', $fi);
    $fi = strpos($element, '</td>', $inici);

    // Ultima cotitzacio
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["ultima_coti"] = $text;

    // Divisa
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["divisa"] = $text;

    // Variació
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["variacio"] = $text;

    // Variació percentual
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["variacio_percent"] = $text;

    // Volum
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["volum"] = $text;

    // Minim
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["mínim"] = $text;

    // Màxim
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["màxim"] = $text;

    // Data
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = extreuContingut($td, "td");
    $resultat["data"] = $text;

    // Hora
    $inici = strpos($element, '<td ', $fi);
    $fi = strpos($element, '</td>', $inici) + 5;
    $td = trim(substr($element, $inici, $fi - $inici));
    $text = trim(extreuContingut($td, "td"));
    $resultat["hora"] = substr($text, 0, 5);

    return $resultat;
}

function webScrappingInversis(){
    $ruta = "https://www.inversis.com/inversiones/productos/cotizaciones-nacionales&pathMenu=3_1_0_0&esLH=N";
    $contingut = file_get_contents($ruta);
    $pos = 0;

    while (($posIni = strpos($contingut, "<tr id=\"tr_", $pos)) !== FALSE) {
        $posFi = strpos($contingut, "</tr>", $posIni);
        $contingutDeTR = substr($contingut, $posIni, $posFi - $posIni);

        $taulaResultat = extreureFila($contingutDeTR);
        $ibex[] = $taulaResultat;
        $pos = $posFi;
    }

    return $ibex;
}



function html_generateTable($aParametre) {
    $capcelera = "<tr>\n";
    $cos = "<tbody>\n";

    foreach ($aParametre as $key => $value) {
        $cos .= "<tr>";
        foreach ($value as $clau => $valor) {
            if (!isset($resultat)) {
                $capcelera .= "<th>".ucwords($clau)."</th>";
            }
            if ($clau == "ultima_coti") {
                if (isset($_SESSION["cotis"])) {
                    if (floatval(str_replace(",",".",$valor)) > floatval(str_replace(",",".",$_SESSION["cotis"][$key]["ultima_coti"]))) {
                        $cos .= "<td class=\"bgGreen\">$valor</td>";
                    } elseif (floatval(str_replace(",",".",$valor)) < floatval(str_replace(",",".",$_SESSION["cotis"][$key]["ultima_coti"]))) {
                        $cos .= "<td class=\"bgRed\">$valor</td>";
                    } else {
                        $cos .= "<td>$valor</td>";
                    }
                } else {
                    $cos .= "<td>$valor</td>";
                }
            } elseif ($clau == "variacio" || $clau == "variacio_percent") {
                if (floatval(str_replace(",",".",$valor))<0) { 
                    $cos .= "<td class=\"red\">$valor</td>";
                } elseif (floatval(str_replace(",",".",$valor))>0){
                    $cos .= "<td class=\"green\">$valor</td>";
                } else {
                    $cos .= "<td>$valor</td>";
                }
            } else {
                $cos .= "<td>$valor</td>";
            }
        }
        $cos .= "</tr>\n";
        $resultat = "<table>$capcelera</tr>\n";
    }
    $cos .= "</tr>\n</tbody>";
    $resultat .= "$cos</table>";
    
    return $resultat;   
}

/**
 * 
 * @param mixed $stringANetejar : Cadena a la que volem eliminar els caràcters perillosos
 * @param int $convertirAlowercase : 
 *      [0] No converir
 *      [1] Convertir la cadena a mínúscules
 *      [2] Convertir la cadena a MAJÚSCULES
 *      [3] Convertir la cadena a UC (primera majúscula, reasta minúscula
 *      [4] Convertir la cadena a UC per paraules (estil nom)
 * @return string|mixed
 */
function sanitize ($stringANetejar, $convertirAlowercase=0){
    if (empty($stringANetejar)) {
        $stringANetejar = "";
    } else {
        $stringANetejar = trim($stringANetejar);
        $stringANetejar = htmlspecialchars(stripslashes(trim($stringANetejar, '-')));
        $stringANetejar = strip_tags($stringANetejar);
        // Preserve escaped octets.
        $stringANetejar = preg_replace('|%([a-fA-F0-9][a-fA-F0-9])|', '---$1---', $stringANetejar);
        // Remove percent signs that are not part of an octet.
        $stringANetejar = str_replace('%', '', $stringANetejar);
        // Restore octets.
        $stringANetejar = preg_replace('|---([a-fA-F0-9][a-fA-F0-9])---|', '%$1', $stringANetejar);
        
        switch ($convertirAlowercase) {
            case 1:
                if (function_exists('mb_strtolower')) {
                    $stringANetejar = mb_strtolower($stringANetejar, 'UTF-8');
                } else {
                    $stringANetejar = strtolower($stringANetejar);
                }
                break;
            case 2:
                if (function_exists('mb_strtoupper')) {
                    $stringANetejar = mb_strtoupper($stringANetejar, 'UTF-8');
                } else {
                    $stringANetejar = strtoupper($stringANetejar);
                }
                break;
            case 3:
                if (function_exists('mb_strtoupper') && function_exists('mb_strtolower')) {
                    $stringANetejar = mb_strtolower($stringANetejar, 'UTF-8');
                    $stringANetejar[0] = mb_strtoupper($stringANetejar, 'UTF-8');
                    
                } else {
                    $stringANetejar = strtolower($stringANetejar);
                    $stringANetejar[0] = strtoupper($stringANetejar[0]);
                }
                break;
            case 4:
                if (function_exists('mb_strtoupper') && function_exists('mb_strtolower')) {
                    $stringANetejar = mb_strtolower($stringANetejar, 'UTF-8');
                    $stringANetejar[0] = mb_strtoupper($stringANetejar, 'UTF-8');
                    $inici=0;
                    while ($pos = strpos($stringANetejar, " ", 1)) {
                        $inici=$pos+1;
                        $stringANetejar[$inici] = mb_strtoupper($stringANetejar[$inici], 'UTF-8');
                    }
                } else {
                    $stringANetejar = strtolower($stringANetejar);
                    $stringANetejar[0] = strtoupper($stringANetejar[0]);
                    $inici=0;
                    while ($pos = strpos($stringANetejar, " ", $inici)) {
                        $inici=$pos+1;
                        $stringANetejar[$inici] = strtoupper($stringANetejar[$inici]);
                        
                    }
                }
                break;
        }
    }
    return $stringANetejar;
} 

function generarCodiAleatori(){
    $valorsPossibles = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    $resultat = "";
    for ($i = 1; $i <= 6; $i ++) {
        $resultat .= $valorsPossibles[rand(0, strlen($valorsPossibles) - 1)];
    }
    return $resultat;
}

function esTipus($dadaAVerificar) {
    $tipusValids = array ("NIF", "NIE", "PAS");
    if (in_array($dadaAVerificar, $tipusValids) ) {
        $esCorrecte = true;
    } else {
        $esCorrecte = false;
    }
    return $esCorrecte;
}
function esSexe($dadaAVerificar) {
    $tipusValids = array ("H", "D");
    if (in_array($dadaAVerificar, $tipusValids) ) {
        $esCorrecte = true;
    } else {
        $esCorrecte = false;
    }
    return $esCorrecte;
}

function validarNif ($nif) {
    $nif = strtoupper($nif);
    $lletresValides = "TRWAGMYFPDXBNJZSQVHLCKE";
    $nifCorrecte = FALSE;
    
    if ((strlen($nif)== 9) && (strpos("XYZ0123456789",$nif[0])!==false)) {
        $numero = substr($nif, 0, 8);
        $numero = str_replace(array('X', 'Y', 'Z'), array(0, 1, 2), $numero);
        
        if(substr($nif, -1, 1) == substr($lletresValides, $numero % 23, 1)) {
            $nifCorrecte = TRUE;
        }
    }
    return $nifCorrecte;
}

function esEmail($emailAVerificar) {
    if (filter_var($emailAVerificar,FILTER_VALIDATE_EMAIL)) {
        $esEmail = true;
    } else {
        $esEmail = false;
    }
    return $esEmail;
}

function esNom($nomAValidar) {
    if (preg_match("/^[a-z ']*$/",$nomAValidar)) {
        $esNom = true;
    } else {
        $esNom = false;
    }
    return $esNom;
}

function esCodiPostal($codiPostalAVerificar) {
    if ((strlen($codiPostalAVerificar) == 5) && (is_numeric($codiPostalAVerificar))) {
        $esCP = true;
    } else {
        $esCP = false;
    }
    return $esCP;
}

function esProvincia($provinciaAVerificar) {
    $provincias = array('alava', 'arava','albacete','alacant','alicante','almería','asturias','avila','badajoz','barcelona','burgos','cáceres',
        'cádiz','cantabria','castelló','castellón','ciudad real','córdoba','la coruña','cuenca','girona','gerona','granada','guadalajara',
        'guipuzkoa','guipúzcoa','huelva','huesca','illes balears','islas baleares','jaén','león','lleida','lérida','lugo','madrid','málaga','murcia','navarra',
        'orense','palencia','las palmas','pontevedra','la rioja','salamanca','segovia','sevilla','soria','tarragona',
        'santa cruz de tenerife','teruel','toledo','valència','valencia','valladolid','bizkaia','vizcaya','zamora','zaragoza');
    if (in_array($provinciaAVerificar,$provincias)) {
        $esUnProvincia = true;
    } else {
        $esUnProvincia = false;
    }
    return $esUnProvincia;
}

function esTelefon($telefonAVerificar) {
    if ((strlen($telefonAVerificar)== 9) && (is_numeric($telefonAVerificar)) ) {
        $esTelefon = true;
    } else {
        $esTelefon = false;
    }
    return $esTelefon;
}

function valorPerFormulari($parametre) {
    return (isset($paramentre)) ? $parametre : "";
}

?>
  